pr: none
trigger: none

stages:
  - stage: create_aks_cluster
    displayName: "Create AKS Cluster"
    jobs:
      - job: create_byocni_nokubeproxy
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -ex
                make -C ./hack/swift azcfg AZCLI=az REGION=$(LOCATION)
                make -C ./hack/swift overlay-no-kube-proxy-up AZCLI=az REGION=$(LOCATION) SUB=$(SUBSCRIPTION_ID) CLUSTER=${RESOURCE_GROUP}-$(make revision) NODE_COUNT=10 VM_SIZE=Standard_DS4_v2
            name: "CreateAksCluster"
            displayName: "Create AKS Cluster"
  - stage: install_cilium
    dependsOn: creating_aks_cluster
    displayName: "Install Cilium on AKS Overlay"
    jobs:
      - job: deploy_cilium_components
        steps:
          - task: AzureCLI@1
            displayName: "Install Cilium, CNS, and ip-masq-agent"
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -ex
                az extension add --name aks-preview
                make -C ./hack/swift set-kubeconf AZCLI=az CLUSTER=${RESOURCE_GROUP}-$(make revision)
                ls -lah
                pwd
                kubectl cluster-info
                kubectl get po -owide -A
                echo "Deploy Azure-CNS"
                kubectl apply -f test/integration/manifests/cilium/cns-write-ovly.yaml
                echo "deploy Cilium ConfigMap"
                kubectl apply -f cilium/configmap.yaml
                kubectl apply -f test/integration/manifests/cilium/cilium-config.yaml
                echo "install Cilium onto Overlay Cluster"
                kubectl apply -f test/integration/manifests/cilium/cilium-agent
                kubectl apply -f test/integration/manifests/cilium/cilium-operator
                # Passes Cilium image to daemonset and deployment
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/daemonset.yaml | kubectl apply -f -
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/deployment.yaml | kubectl apply -f -
                kubectl get po -owide -A
                echo "deploy ip-masq-agent for overlay"
                kubectl create -f test/integration/manifests/ip-masq-agent/ip-masq-agent.yaml --validate=false
                cd test/integration/manifests/ip-masq-agent/
                kubectl create configmap config-custom.yaml
                kubectl create configmap config-reconcile.yaml
                cd ../../../..
                kubectl get po -owide -A
  - stage: delete
    displayName: "Delete Resources"
    dependsOn:
      - connectivity_tests
    jobs:
      - job: delete_resources
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -ex
                if [ "$(DELETE_RESOURCES)" ]
                then
                  echo "Deleting Cluster and resource group"
                  make -C ./hack/swift set-kubeconf AZCLI=az CLUSTER=${RESOURCE_GROUP}-$(make revision)
                  make -C ./hack/swift azcfg AZCLI=az REGION=$(LOCATION)
                  make -C ./hack/swift down AZCLI=az REGION=$(LOCATION) SUB=$(SUBSCRIPTION_ID) CLUSTER=${RESOURCE_GROUP}-$(make revision)
                  echo "Cluster and resources down"
                else
                  echo "Deletion of resources is False"
                fi
            name: "CleanUpCluster"
            displayName: "Cleanup cluster"
    condition: always()
